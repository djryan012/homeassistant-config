 ##### Garage Lights
- alias: "Turn on off garage lights when there is movement"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_motion_status
      to: 'on'
    - platform: state
      entity_id: binary_sensor.garage_motion_status
      to: 'off'
      for:
        minutes: 20
  action:
    - service_template: '{% if trigger.to_state.state == "on" %}light.turn_on{% elif trigger.to_state.state == "off" %}light.turn_off{% endif %}'
      entity_id: light.garage_lights

####  Turn Side light on with motion  #####
- alias: "Side Light on by Sensor"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.gate_motion_status
      to: 'on'
  action:
    - service: script.side_light_on
- alias: "Side Light off by Sensor"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.gate_motion_status
      to: 'off'
  action:
    - service: script.side_light_off
    
#### Backyard Lights on by Sensor
# - alias: "Backyard Lights on by Sensor"
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.shelly1pm_motion
#       to: 'on'
#   action:
#     - service: homeassistant.turn_on
#       entity_id: switch.shelly1pm_mqtt
# - alias: "Backyard Lights off by Sensor"
#   initial_state: True
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.shelly1pm_motion
#       to: 'off'
#   condition:
#     - condition: state
#       entity_id: binary_sensor.shelly1pm_motion
#       state: 'off'
#       for:
#           minutes: 5
#   action:
#     - service: homeassistant.turn_off
#       entity_id: switch.shelly1pm_mqtt

#####  Turn Patio light on with motion  #####
- alias: "Patio Light on by camera sensor"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.blueiris_back_yard_motion
      from: 'off'
      to: 'on'
  condition:
      condition: and  # 'when dark' condition: either after sunset or before sunrise
      conditions:
        - condition: sun
          after: sunset
        - condition: sun
          before: sunrise
        - condition: state
          entity_id: light.patio_lights
          state: 'off'
          # optional: trigger only if state was this for last X time.
          for:
             seconds: 15
        - condition: state
          entity_id: light.patio_lights
          state: 'on'
  action:
    - service: homeassistant.turn_on
      entity_id: light.patio_lights
      data:
        brightness: 150
        transition: 0

# Lights out no motion detected
- alias: "Dinning Light out"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.echo_occupancy
      to: 'off'
  action:
    - service: homeassistant.turn_off
      entity_id:
        -  light.dining_room


####  Wetbar Control with motion  #####
- alias: "Wetbar on by Sensor"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_wetbar_sensor
      to: 'on'
  condition:
    - condition: numeric_state
      entity_id: sensor.wallpanel_light_level
      below: 20
  action:
    - service: script.wetbar_on
- alias: "Wetbar off by Sensor"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.tradfri_wetbar_sensor
      to: 'off'
  action:
    - service: script.wetbar_off

####  Kitchen Lights with motion  #####
- alias: "Kitchen on by Sensor"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_motion_status
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.kitchen_down_lights
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.wallpanel_light_level
        below: 20
  action:
    - service: homeassistant.turn_on
      entity_id: light.kitchen_down_lights
      data:
        brightness: 25
        transition: 2

- alias: "Kitchen off by Sensor"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_motion_status
      to: 'off'
      for: 
        minutes: 5
  condition:
    - condition: template
      value_template: "{{ state_attr('light.kitchen_down_lights', 'brightness') | int < 100 }}"
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: light.kitchen_down_lights
        transition: 3

- alias: "Kitchen off by Sensor after 30min"
  initial_state: True
  trigger:
    - platform: state
      entity_id: binary_sensor.kitchen_motion_status
      to: 'off'
      for: 
        minutes: 30
  condition:
    - condition: template
      value_template: "{{ state_attr('light.kitchen_down_lights', 'brightness') | int > 100 }}"
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: light.kitchen_down_lights
        transition: 3
