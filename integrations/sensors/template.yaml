####################################################
#                      TEMPLATE                    #
####################################################

#https://home-assistant.io/components/sensor.template/
- platform: template
  sensors:
    since_last_boot_templated:
      value_template: >-
        {%- set slb = states.sensor.last_boot.state.split(' ') -%}
        {%- set count = slb | length -%}
        {%- set hms = slb[count - 1] -%}
        {%- set hms_trimmed = hms.split('.')[0] -%}
        {%- set hms_split = hms_trimmed.split(':') -%}
        {%- set hours = hms_split[0] | int -%}
        {%- if count == 3 -%}
          {{ slb[0] ~ ' ' ~ slb[1] ~ ' ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
        {%- endif -%}

#Solor Edge 
    solaredge_current_power_template:
      friendly_name: Solaredge Current Power in KW
      unit_of_measurement: kWh
      value_template: "{{ (states('sensor.solaredge_current_power') | float / 1000) | round(2) }}"
    solaredge_energy_today_template:
      friendly_name: Solaredge Daily Power in KW
      unit_of_measurement: kWh
      value_template: "{{ (states('sensor.solaredge_energy_today') | float / 1000) | round(2) }}"

# Google Calendar referencing my work Calendar
    my_event_offset_1:  # (45 * 60).
      friendly_name: "Leave for Work"
      value_template: >
        {% if as_timestamp(states.calendar.disney_work_schedule.attributes.start_time) - as_timestamp( strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M" ) ) < 2760  %}on{% else %}off{% endif %}

    my_event_offset_2:  # (60 + 30 * 60).
      friendly_name: "Wake for Work"
      value_template: >
        {% if as_timestamp(states.calendar.disney_work_schedule.attributes.start_time) - as_timestamp( strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M" ) ) < 4860  %}on{% else %}off{% endif %}
