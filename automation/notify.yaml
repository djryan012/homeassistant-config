- alias: 'Hass Startup Notification'
  initial_state: True
  hide_entity: True
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: notify.telbot_david
      data:
        message: 'Hass.io is back up as of {{now().strftime("%H:%M:%S")}}'
    - service: script.audio_notify
      data_template:
        tts_msg: "Home Assistant has Restarting"
        mplayer: "echo_dot_main"

- alias: Update Available Notification
  trigger:
    - platform: state
      entity_id: binary_sensor.updater
      from: 'off'
      to: 'on'
  action:
    - service: notify.notify
      data:
        message: 'Update for Home Assistant is available.'

- alias: "Battery is low in Sensor"
  initial_state: True
  hide_entity: True
  trigger:
    - platform: numeric_state
      entity_id: sensor.office_motion_sensor,sensor.tradfri_remote_control,sensor.exterior_motion_sensor
      below: 20
  action:
    - service: notify.telbot_david
      data_template:
        message: '{{trigger.from_state.attributes.friendly_name}} Battery is below 20%'

- alias: "Tell David to leave for work"
  initial_state: True
  hide_entity: false
  trigger:
    - platform: state
      entity_id: sensor.my_event_offset_1
      to: 'on'
  condition:
    - condition: template 
      value_template: >
        {% if is_state('person.david', 'home') %} true
        {% elif is_state('person.david', 'not_home') %} true
        {% else %} false {% endif %}
  action:
    - service: mqtt.publish
      data_template:
        topic: zanzito/david/alarm/play
        payload: 'Time to leave for Work'
        retain: false

- alias: 'Pond Filter Issue'
  initial_state: True
  hide_entity: True
  trigger:
    - platform: state
      entity_id: binary_sensor.pond_filter_status # Sensor8	(Pond Filter)
      from: 'off'
      to: 'on'
      for:
        seconds: 60
  action:
    - service: notify.telbot_david
      data:
        message: 'The pond filter may have an issue as of {{now().strftime("%H:%M")}}'

- alias: "Internet Speed Connection Poor"
  trigger:
    - platform: template
      value_template: "{{ states('sensor.speedtest_download')|float < 120 }}"
  action:
    - service: notify.telbot_david
      data:
        message: "Internet Speed is {{ sensor.speedtest_download}}"

- alias: Persistent Notification
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'unknown' }}"    
  action:
    - service: notify.telbot_david
      data:
        message: 'Notify: {{ state_attr(persistent_notification.http_login, message)}}'
    # - service: notify.telbot_david
    #   data:
    #     message: 'Hass.io is back up as of {{now().strftime("%H:%M:%S")}}'
